<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zttx.web.module.common.mapper.ProductEditAuditLogMapper">
    <!-- 基础列 -->
    <sql id="productEditAuditLogColumns">
        a.refrenceId as refrenceId ,
        a.productId as productId ,
        a.operateId as operateId ,
        a.content as content ,
        a.createTime as createTime 
    </sql>

    <!-- 普通插入 -->
    <insert id="insert" parameterType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        insert into ProductEditAuditLog(
         refrenceId ,
         productId ,
         operateId ,
         content ,
         createTime 
        ) VALUES (
        #{refrenceId}  ,
        #{productId}  ,
        #{operateId}  ,
        #{content}  ,
        #{createTime}  
        )
    </insert>
    <!-- 根据主键物理删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from ProductEditAuditLog where refrenceId = #{refrenceId}
    </delete>

    <!-- 根据主键逻辑删除 -->
    <update id="delete" parameterType="java.lang.String">
        update ProductEditAuditLog set delFlag = true where refrenceId = #{refrenceId}
    </update>

    <!--根据条件是否插入数据 -->
    <insert id="insertSelective" parameterType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        insert into ProductEditAuditLog
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="refrenceId != null">
            refrenceId ,
        </if>
        <if test="productId != null">
            productId ,
        </if>
        <if test="operateId != null">
            operateId ,
        </if>
        <if test="content != null">
            content ,
        </if>
        <if test="createTime != null">
            createTime 
        </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="refrenceId != null">
            #{refrenceId} ,
        </if>
        <if test="productId != null">
            #{productId} ,
        </if>
        <if test="operateId != null">
            #{operateId} ,
        </if>
        <if test="content != null">
            #{content} ,
        </if>
        <if test="createTime != null">
            #{createTime} 
        </if>
        </trim>
    </insert>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="list">
        insert into ProductEditAuditLog(
         refrenceId ,
         productId ,
         operateId ,
         content ,
         createTime 
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.refrenceId}  ,
            #{item.productId}  ,
            #{item.operateId}  ,
            #{item.content}  ,
            #{item.createTime}  
            )
        </foreach>
    </insert>

    <!-- 选择性更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        update ProductEditAuditLog
           <set>
            <if test="productId != null">
                productId = #{productId} ,
            </if>
            <if test="operateId != null">
                operateId = #{operateId} ,
            </if>
            <if test="content != null">
                content = #{content} ,
            </if>
            <if test="createTime != null">
                createTime = #{createTime} 
            </if>
           </set>
        where refrenceId = #{refrenceId}
    </update>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ProductEditAuditLog set
            productId = #{item.productId} ,
            operateId = #{item.operateId} ,
            content = #{item.content} ,
            createTime = #{item.createTime} 
            where refrenceId = #{item.refrenceId}
        </foreach>
    </update>

    <!-- 根据主键更新一条信息所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        update ProductEditAuditLog set
            productId = #{productId} ,
            operateId = #{operateId} ,
            content = #{content} ,
            createTime = #{createTime} 
        where refrenceId = #{refrenceId}
    </update>

    <!-- 根据主键取数据 -->
    <select id="selectByPrimaryKey"  parameterType="java.lang.String" resultType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        select <include refid="productEditAuditLogColumns"/> from ProductEditAuditLog a where a.refrenceId = #{refrenceId}
    </select>

    <!-- 可分页的对象查询 -->
    <select id="findList" resultType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        SELECT
        <include refid="productEditAuditLogColumns"/>
        FROM ProductEditAuditLog a WHERE a.delFlag = 0
        <if test="productId != null and productId != ''">
            and a.productId like CONCAT('%',#{productId}, '%')
        </if>
        <if test="operateId != null and operateId != ''">
            and a.operateId like CONCAT('%',#{operateId}, '%')
        </if>
        <if test="content != null and content != ''">
            and a.content like CONCAT('%',#{content}, '%')
        </if>
        <if test="createTime != null and createTime != ''">
            and a.createTime = #{createTime}
        </if>
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.zttx.web.module.common.entity.ProductEditAuditLog">
        SELECT
        <include refid="productEditAuditLogColumns"/>
        FROM ProductEditAuditLog a WHERE a.delFlag = 0
    </select>

	<select id="searchLogList" parameterType="com.zttx.web.module.common.entity.ProductEditAuditLog" resultType="java.util.HashMap">
		select 
			o.operateId as operateId, 
			o.content as content, 
			o.createTime as createTime
        from ProductEditAuditLog o 
        where 
        	o.productId = #{productId}
        order by o.createTime desc
	</select>
</mapper>

