<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zttx.web.module.common.mapper.StockAdjustDetailMapper">
    <!-- 基础列 -->
    <sql id="stockAdjustDetailColumns">
        a.refrenceId as refrenceId ,
        a.dealerId as dealerId ,
        a.brandId as brandId ,
        a.brandsId as brandsId ,
        a.productId as productId ,
        a.productSkuId as productSkuId ,
        a.orderNo as orderNo,
        a.baseStock as baseStock ,
        a.sendNum as sendNum ,
        a.saleNum as saleNum ,
        a.refundNum as refundNum ,
        a.source as source ,
        a.createTime as createTime ,
        a.delFlag as delFlag
    </sql>

    <!-- 普通插入 -->
    <insert id="insert" parameterType="com.zttx.web.module.common.entity.StockAdjustDetail">
        insert into StockAdjustDetail(
        refrenceId ,
        dealerId ,
        brandId ,
        brandsId ,
        productId ,
        productSkuId ,
        orderNo,
        baseStock ,
        sendNum ,
        saleNum ,
        refundNum ,
        source ,
        createTime ,
        delFlag
        ) VALUES (
        #{refrenceId} ,
        #{dealerId} ,
        #{brandId} ,
        #{brandsId} ,
        #{productId} ,
        #{productSkuId} ,
        #{orderNo} ,
        #{baseStock} ,
        #{sendNum} ,
        #{saleNum} ,
        #{refundNum} ,
        #{source} ,
        #{createTime} ,
        #{delFlag}
        )
    </insert>
    <!-- 根据主键物理删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from StockAdjustDetail where refrenceId = #{refrenceId}
    </delete>

    <!-- 根据主键逻辑删除 -->
    <update id="delete" parameterType="java.lang.String">
        update StockAdjustDetail set delFlag = true where refrenceId = #{refrenceId}
    </update>

    <!--根据条件是否插入数据 -->
    <insert id="insertSelective" parameterType="com.zttx.web.module.common.entity.StockAdjustDetail">
        insert into StockAdjustDetail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="refrenceId != null">
                refrenceId ,
            </if>
            <if test="dealerId != null">
                dealerId ,
            </if>
            <if test="brandId != null">
                brandId ,
            </if>
            <if test="brandsId != null">
                brandsId ,
            </if>
            <if test="productId != null">
                productId ,
            </if>
            <if test="productSkuId != null">
                productSkuId ,
            </if>
            <if test="orderNo != null">
                orderNo ,
            </if>
            <if test="baseStock != null">
                baseStock ,
            </if>
            <if test="sendNum != null">
                sendNum ,
            </if>
            <if test="saleNum != null">
                saleNum ,
            </if>
            <if test="refundNum != null">
                refundNum ,
            </if>
            <if test="source != null">
                source ,
            </if>
            <if test="createTime != null">
                createTime ,
            </if>
            <if test="delFlag != null">
                delFlag
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="refrenceId != null">
                #{refrenceId} ,
            </if>
            <if test="dealerId != null">
                #{dealerId} ,
            </if>
            <if test="brandId != null">
                #{brandId} ,
            </if>
            <if test="brandsId != null">
                #{brandsId} ,
            </if>
            <if test="productId != null">
                #{productId} ,
            </if>
            <if test="productSkuId != null">
                #{productSkuId} ,
            </if>
            <if test="orderNo != null">
                #{orderNo} ,
            </if>
            <if test="baseStock != null">
                #{baseStock} ,
            </if>
            <if test="sendNum != null">
                #{sendNum} ,
            </if>
            <if test="saleNum != null">
                #{saleNum} ,
            </if>
            <if test="refundNum != null">
                #{refundNum} ,
            </if>
            <if test="source != null">
                #{source} ,
            </if>
            <if test="createTime != null">
                #{createTime} ,
            </if>
            <if test="delFlag != null">
                #{delFlag}
            </if>
        </trim>
    </insert>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="list">
        insert into StockAdjustDetail(
        refrenceId ,
        dealerId ,
        brandId ,
        brandsId ,
        productId ,
        productSkuId ,
        orderNo,
        baseStock ,
        sendNum ,
        saleNum ,
        refundNum ,
        source ,
        createTime ,
        delFlag
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.refrenceId} ,
            #{item.dealerId} ,
            #{item.brandId} ,
            #{item.brandsId} ,
            #{item.productId} ,
            #{item.productSkuId} ,
            #{item.orderNo} ,
            #{item.baseStock} ,
            #{item.sendNum} ,
            #{item.saleNum} ,
            #{item.refundNum} ,
            #{item.source} ,
            #{item.createTime} ,
            #{item.delFlag}
            )
        </foreach>
    </insert>

    <!-- 选择性更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.zttx.web.module.common.entity.StockAdjustDetail">
        update StockAdjustDetail
        <set>
            <if test="dealerId != null">
                dealerId = #{dealerId} ,
            </if>
            <if test="brandId != null">
                brandId = #{brandId} ,
            </if>
            <if test="brandsId != null">
                brandsId = #{brandsId} ,
            </if>
            <if test="productId != null">
                productId = #{productId} ,
            </if>
            <if test="productSkuId != null">
                productSkuId = #{productSkuId} ,
            </if>
            <if test="orderNo != null">
                orderNo = #{orderNo} ,
            </if>
            <if test="baseStock != null">
                baseStock = #{baseStock} ,
            </if>
            <if test="sendNum != null">
                sendNum = #{sendNum} ,
            </if>
            <if test="saleNum != null">
                saleNum = #{saleNum} ,
            </if>
            <if test="refundNum != null">
                refundNum = #{refundNum} ,
            </if>
            <if test="source != null">
                source = #{source} ,
            </if>
            <if test="createTime != null">
                createTime = #{createTime} ,
            </if>
            <if test="delFlag != null">
                delFlag = #{delFlag}
            </if>
        </set>
        where refrenceId = #{refrenceId}
    </update>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update StockAdjustDetail set
            dealerId = #{item.dealerId} ,
            brandId = #{item.brandId} ,
            brandsId = #{item.brandsId} ,
            productId = #{item.productId} ,
            productSkuId = #{item.productSkuId} ,
            orderNo = #{item.orderNo} ,
            baseStock = #{item.baseStock} ,
            sendNum = #{item.sendNum} ,
            saleNum = #{item.saleNum} ,
            refundNum = #{item.refundNum} ,
            source = #{item.source} ,
            createTime = #{item.createTime} ,
            delFlag = #{item.delFlag}
            where refrenceId = #{item.refrenceId}
        </foreach>
    </update>

    <!-- 根据主键更新一条信息所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.zttx.web.module.common.entity.StockAdjustDetail">
        update StockAdjustDetail set
        dealerId = #{dealerId} ,
        brandId = #{brandId} ,
        brandsId = #{brandsId} ,
        productId = #{productId} ,
        productSkuId = #{productSkuId} ,
        orderNo = #{orderNo} ,
        baseStock = #{baseStock} ,
        sendNum = #{sendNum} ,
        saleNum = #{saleNum} ,
        refundNum = #{refundNum} ,
        source = #{source} ,
        createTime = #{createTime} ,
        delFlag = #{delFlag}
        where refrenceId = #{refrenceId}
    </update>

    <!-- 根据主键取数据 -->
    <select id="selectByPrimaryKey" parameterType="java.lang.String"
            resultType="com.zttx.web.module.common.entity.StockAdjustDetail">
        select
        <include refid="stockAdjustDetailColumns"/>
        from StockAdjustDetail a where a.refrenceId = #{refrenceId}
    </select>

    <!-- 可分页的对象查询 -->
    <select id="findList" resultType="com.zttx.web.module.common.entity.StockAdjustDetail">
        SELECT
        <include refid="stockAdjustDetailColumns"/>
        FROM StockAdjustDetail a WHERE a.delFlag = 0
        <if test="dealerId != null and dealerId != ''">
            and a.dealerId like CONCAT('%',#{dealerId}, '%')
        </if>
        <if test="brandId != null and brandId != ''">
            and a.brandId like CONCAT('%',#{brandId}, '%')
        </if>
        <if test="brandsId != null and brandsId != ''">
            and a.brandsId like CONCAT('%',#{brandsId}, '%')
        </if>
        <if test="productId != null and productId != ''">
            and a.productId like CONCAT('%',#{productId}, '%')
        </if>
        <if test="productSkuId != null and productSkuId != ''">
            and a.productSkuId like CONCAT('%',#{productSkuId}, '%')
        </if>
        <if test="orderNo != null and orderNo != ''">
            and a.orderNo like CONCAT('%',#{orderNo}, '%')
        </if>
        <if test="baseStock != null and baseStock != ''">
            and a.baseStock = #{baseStock}
        </if>
        <if test="sendNum != null and sendNum != ''">
            and a.sendNum = #{sendNum}
        </if>
        <if test="saleNum != null and saleNum != ''">
            and a.saleNum = #{saleNum}
        </if>
        <if test="refundNum != null and refundNum != ''">
            and a.refundNum = #{refundNum}
        </if>
        <if test="source != null and source != ''">
            and a.source = #{source}
        </if>
        <if test="createTime != null and createTime != ''">
            and a.createTime = #{createTime}
        </if>
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.zttx.web.module.common.entity.StockAdjustDetail">
        SELECT
        <include refid="stockAdjustDetailColumns"/>
        FROM StockAdjustDetail a WHERE a.delFlag = 0
    </select>
    <select id="selectStockAdjustDetailGroupByDateList" resultType="java.util.Map">
        SELECT
        a.createTime as createTime,
        a.orderNo as orderNo,
        a.source as source,
        b.refrenceId as orderId,
        sum(a.sendNum) as sendNum,
        sum(a.saleNum) as saleNum,
        sum(a.refundNum) as refundNum,
        sum(a.baseStock) as baseStock
        FROM StockAdjustDetail a left JOIN DealerOrder b ON a.orderNo = b.orderId
        where a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId}
        and a.delFlag = 0
        <if test="null!=stockAdjustDetail.startTimeLong and ''!=stockAdjustDetail.startTimeLong">
            and a.createTime &gt;=#{stockAdjustDetail.startTimeLong}
        </if>
        <if test="null!=stockAdjustDetail.endTimeLong and ''!=stockAdjustDetail.endTimeLong">
            and a.createTime &lt;#{stockAdjustDetail.endTimeLong}
        </if>
        group by a.createTime, a.source,a.orderNo
        order by a.createTime desc
    </select>
    <select id="selectStockAdjustDetailGroupByDateListSum" resultType="java.util.Map">
        SELECT
        count(a.refrenceId) as count,
        sum(a.baseStock+a.sendNum-a.saleNum-a.refundNum) as stockSum
        FROM StockAdjustDetail a
        where a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId}
        and a.delFlag = 0
    </select>
    <select id="selectStockAdjustDetailGroupByProductList" resultType="java.util.Map">
        select
        a.productSkuId as productSkuId,
        b.brandsName as brandsName,
        c.productTitle as productTitle,
        c.productNo as productNo,
        d.productSkuName as productSkuName,
        sum(a.baseStock) as baseStock,
        sum(a.sendNum) as sendNum,
        sum(a.saleNum) as saleNum,
        sum(a.refundNum) as refundNum,
        sum(a.baseStock+a.sendNum-a.saleNum-a.refundNum) as stockSum
        from StockAdjustDetail a,BrandesInfo b, ProductBaseInfo c,ProductSku d
        where a.brandsId = b.refrenceId and a.productId=c.refrenceId and a.productSkuId = d.refrenceId
        and a.delFlag = 0 and a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId}
        <if test="null!=stockAdjustDetail.productNo and ''!=stockAdjustDetail.productNo">
            and c.productNo like concat('%',#{stockAdjustDetail.productNo},'%')
        </if>
        <if test="null!=stockAdjustDetail.productTitle and ''!=stockAdjustDetail.productTitle">
            and c.productTitle like concat('%',#{stockAdjustDetail.productTitle},'%')
        </if>
        group by a.productSkuId
    </select>
    <select id="selectStockAdjustDetailGroupByProductListSum" resultType="java.util.Map">
        SELECT
        count(a.refrenceId) as count,
        sum(a.baseStock+a.sendNum-a.saleNum-a.refundNum) as stockSum
        FROM StockAdjustDetail a
        where a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId}
        and a.delFlag = 0
    </select>
    <select id="selectStockAdjustDetailBySkuList" resultType="java.util.Map">
        SELECT
        a.createTime as createTime,
        a.orderNo as orderNo,
        a.source as source,
        sum(a.sendNum) as sendNum,
        sum(a.saleNum) as saleNum,
        sum(a.refundNum) as refundNum,
        sum(a.baseStock) as baseStock
        FROM StockAdjustDetail a
        where a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId} and
        a.productSkuId=#{stockAdjustDetail.productSkuId}
        and a.delFlag = 0
        <if test="null!=stockAdjustDetail.source">
        and a.source = #{stockAdjustDetail.source}
        </if>
        group by a.createTime, a.source,a.orderNo
        order by a.createTime desc
    </select>
    <select id="selectStockAdjustDetailBySkuListSum" resultType="java.util.Map">
        SELECT
        count(a.refrenceId) as count,
        sum(a.baseStock+a.sendNum-a.saleNum-a.refundNum) as stockSum
        FROM StockAdjustDetail a
        where a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId} and
        a.productSkuId=#{stockAdjustDetail.productSkuId}
        and a.delFlag = 0
    </select>
    <select id="selectStockAdjustDetailByTimeAndSourceList" resultType="java.util.Map">
        select
        b.productTitle as productTitle,
        b.productNo as productNo,
        c.productSkuName as productSkuName,
        <choose>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 0">
                a.sendNum as num
            </when>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 1">
                a.saleNum as num
            </when>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 2">
                a.refundNum as num
            </when>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 3">
                a.baseStock as num
            </when>
        </choose>
        from StockAdjustDetail a,ProductBaseInfo b,ProductSku c
        where a.productId = b.refrenceId and a.productSkuId = c.refrenceId
        and a.dealerId = #{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId}
        and a.source = #{stockAdjustDetail.source} and a.createTime=#{stockAdjustDetail.createTime}
        and a.delFlag=0
        <if test="null!=stockAdjustDetail.productTitle and ''!=stockAdjustDetail.productTitle">
            and b.productTitle like concat('%',#{stockAdjustDetail.productTitle},'%')
        </if>
        <if test="null!=stockAdjustDetail.productNo and ''!=stockAdjustDetail.productNo">
            and b.productNo like concat('%',#{stockAdjustDetail.productNo},'%')
        </if>
        <if test="null!=stockAdjustDetail.orderNo and ''!=stockAdjustDetail.orderNo">  #防止同一时间同一用户多点登录发货
           and a.orderNo=#{stockAdjustDetail.orderNo}
        </if>
    </select>
    <select id="selectStockAdjustDetailByTimeAndSourceListSum" resultType="java.util.Map">
        select
        count(a.refrenceId) as count,
        <choose>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 0">
                sum(a.sendNum) as numSum
            </when>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 1">
                sum(a.saleNum) as numSum
            </when>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 2">
                sum(a.refundNum) as numSum
            </when>
            <when test="null!=stockAdjustDetail.source and stockAdjustDetail.source == 3">
                sum(a.baseStock) as numSum
            </when>
        </choose>
        from StockAdjustDetail a,ProductBaseInfo b
        where a.productId = b.refrenceId and
        a.dealerId = #{stockAdjustDetail.dealerId} and a.brandId=#{stockAdjustDetail.brandId}
        and a.source = #{stockAdjustDetail.source} and a.createTime=#{stockAdjustDetail.createTime}
        and a.delFlag=0
        <if test="null!=stockAdjustDetail.productTitle and ''!=stockAdjustDetail.productTitle">
            and b.productTitle like concat('%',#{stockAdjustDetail.productTitle},'%')
        </if>
        <if test="null!=stockAdjustDetail.productNo and ''!=stockAdjustDetail.productNo">
            and b.productNo like concat('%',#{stockAdjustDetail.productNo},'%')
        </if>
        <if test="null!=stockAdjustDetail.orderNo and ''!=stockAdjustDetail.orderNo">  #防止同一时间同一用户多点登录发货
            and a.orderNo=#{stockAdjustDetail.orderNo}
        </if>
    </select>
    <select id="selectHeadData" resultType="java.util.Map">
        select
        b.brandsName as brandsName,
        c.productTitle as productTitle,
        c.productNo as productNo,
        d.productSkuName as productSkuName,
        a.source as type
        from StockAdjustDetail a,BrandesInfo b,ProductBaseInfo c,ProductSku d
        where a.brandsId = b.refrenceId and a.productId = c.refrenceId and a.productSkuId = d.refrenceId
        and a.delFlag=0 and a.dealerId=#{stockAdjustDetail.dealerId} and a.brandId = #{stockAdjustDetail.brandId}
        and a.productSkuId = #{stockAdjustDetail.productSkuId}
        group by a.source
    </select>
</mapper>

